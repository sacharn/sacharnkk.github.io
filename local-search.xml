<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title></title>
    <link href="/2022/09/12/2022%E5%B9%B4%E7%A7%8B%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/"/>
    <url>/2022/09/12/2022%E5%B9%B4%E7%A7%8B%E9%9D%A2%E8%AF%95%E6%80%BB%E7%BB%93/</url>
    
    <content type="html"><![CDATA[<h1 id="2022年秋招面试总结"><a href="#2022年秋招面试总结" class="headerlink" title="2022年秋招面试总结"></a>2022年秋招面试总结</h1><h2 id="Java基础"><a href="#Java基础" class="headerlink" title="Java基础"></a>Java基础</h2><h3 id="封装、继承、多态"><a href="#封装、继承、多态" class="headerlink" title="封装、继承、多态"></a>封装、继承、多态</h3><h3 id="重写与重载"><a href="#重写与重载" class="headerlink" title="重写与重载"></a>重写与重载</h3><h3 id="接口与抽象类的区别"><a href="#接口与抽象类的区别" class="headerlink" title="接口与抽象类的区别"></a>接口与抽象类的区别</h3><h2 id="计算机网络"><a href="#计算机网络" class="headerlink" title="计算机网络"></a>计算机网络</h2><h3 id="HTTPS原理以及攻击"><a href="#HTTPS原理以及攻击" class="headerlink" title="HTTPS原理以及攻击"></a>HTTPS原理以及攻击</h3><h3 id="对称加密和非对称加密"><a href="#对称加密和非对称加密" class="headerlink" title="对称加密和非对称加密"></a>对称加密和非对称加密</h3><h3 id="Socket通信"><a href="#Socket通信" class="headerlink" title="Socket通信"></a>Socket通信</h3><h3 id="DNS解析"><a href="#DNS解析" class="headerlink" title="DNS解析"></a>DNS解析</h3><h3 id="NAT地址转换"><a href="#NAT地址转换" class="headerlink" title="NAT地址转换"></a>NAT地址转换</h3><h3 id="SSO、权限认证、JWT"><a href="#SSO、权限认证、JWT" class="headerlink" title="SSO、权限认证、JWT"></a>SSO、权限认证、JWT</h3><h3 id="服务端怎么获取客户端的浏览器类型"><a href="#服务端怎么获取客户端的浏览器类型" class="headerlink" title="服务端怎么获取客户端的浏览器类型"></a>服务端怎么获取客户端的浏览器类型</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs java">String header = request.getHeader(<span class="hljs-string">&quot;User-Agent&quot;</span>);<br></code></pre></td></tr></table></figure><h2 id="MySQL数据库"><a href="#MySQL数据库" class="headerlink" title="MySQL数据库"></a>MySQL数据库</h2><h4 id="SQL注入"><a href="#SQL注入" class="headerlink" title="SQL注入"></a>SQL注入</h4><p>————————————————</p><p>SQL注入是将Web页面的原URL、表单域或数据包输入的参数，修改拼接成SQL语句，传递给Web服务器，进而传给数据库服务器以执行数据库命令。<br>在MyBatis中，#{}将传入的数据都当成一个字符串，会对自动传入的数据加一个双引号，可以防止sql注入。${}将传入的数据直接显示生成在sql中，不能防止sql注入。但是在涉及到动态表名和列名时，只能用$，就必须要手动做好过滤。<br>————————————————</p><h4 id="索引分类、原理与优化"><a href="#索引分类、原理与优化" class="headerlink" title="索引分类、原理与优化"></a>索引分类、原理与优化</h4><h4 id="分库分表原理"><a href="#分库分表原理" class="headerlink" title="分库分表原理"></a>分库分表原理</h4><h4 id="主从一致"><a href="#主从一致" class="headerlink" title="主从一致"></a>主从一致</h4><h4 id="读写分离"><a href="#读写分离" class="headerlink" title="读写分离"></a>读写分离</h4><h4 id="事务管理与事务隔离级别"><a href="#事务管理与事务隔离级别" class="headerlink" title="事务管理与事务隔离级别"></a>事务管理与事务隔离级别</h4><h2 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h2><h3 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h3><h3 id="缓存使用"><a href="#缓存使用" class="headerlink" title="缓存使用"></a>缓存使用</h3><h4 id="过期时间"><a href="#过期时间" class="headerlink" title="过期时间"></a>过期时间</h4><h3 id="其他场景"><a href="#其他场景" class="headerlink" title="其他场景"></a>其他场景</h3><h2 id="多线程"><a href="#多线程" class="headerlink" title="多线程"></a>多线程</h2><h3 id="线程与进程"><a href="#线程与进程" class="headerlink" title="线程与进程"></a>线程与进程</h3><h3 id="线程创建方式"><a href="#线程创建方式" class="headerlink" title="线程创建方式"></a>线程创建方式</h3><h3 id="线程的生命周期"><a href="#线程的生命周期" class="headerlink" title="线程的生命周期"></a>线程的生命周期</h3><h3 id="线程池的工作流程"><a href="#线程池的工作流程" class="headerlink" title="线程池的工作流程"></a>线程池的工作流程</h3><h3 id="线程池的核心参数"><a href="#线程池的核心参数" class="headerlink" title="线程池的核心参数"></a>线程池的核心参数</h3><h3 id="线程池饱和的拒绝策略"><a href="#线程池饱和的拒绝策略" class="headerlink" title="线程池饱和的拒绝策略"></a>线程池饱和的拒绝策略</h3><h2 id="锁"><a href="#锁" class="headerlink" title="锁"></a>锁</h2><h3 id="sycronize"><a href="#sycronize" class="headerlink" title="sycronize"></a>sycronize</h3><h3 id="retreenlock"><a href="#retreenlock" class="headerlink" title="retreenlock"></a>retreenlock</h3><h3 id="volatile"><a href="#volatile" class="headerlink" title="volatile"></a>volatile</h3><h3 id="atomic"><a href="#atomic" class="headerlink" title="atomic"></a>atomic</h3><h3 id="threadlocal"><a href="#threadlocal" class="headerlink" title="threadlocal"></a>threadlocal</h3><h3 id="死锁的形成条件和解决办法"><a href="#死锁的形成条件和解决办法" class="headerlink" title="死锁的形成条件和解决办法"></a>死锁的形成条件和解决办法</h3><h2 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h2><h3 id="JVM结构"><a href="#JVM结构" class="headerlink" title="JVM结构"></a>JVM结构</h3><h3 id="类加载流程"><a href="#类加载流程" class="headerlink" title="类加载流程"></a>类加载流程</h3><h3 id="双亲委派机制"><a href="#双亲委派机制" class="headerlink" title="双亲委派机制"></a>双亲委派机制</h3><h3 id="垃圾回收机制"><a href="#垃圾回收机制" class="headerlink" title="垃圾回收机制"></a>垃圾回收机制</h3><h3 id="JVM调优经验"><a href="#JVM调优经验" class="headerlink" title="JVM调优经验"></a>JVM调优经验</h3><h2 id="集合"><a href="#集合" class="headerlink" title="集合"></a>集合</h2><h3 id="HashMap"><a href="#HashMap" class="headerlink" title="HashMap"></a>HashMap</h3><h3 id="ArrayList"><a href="#ArrayList" class="headerlink" title="ArrayList"></a>ArrayList</h3><h2 id="Docker-k8s"><a href="#Docker-k8s" class="headerlink" title="Docker k8s"></a>Docker k8s</h2><h2 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h2><h3 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h3><h3 id="项目中的使用"><a href="#项目中的使用" class="headerlink" title="项目中的使用"></a>项目中的使用</h3><h3 id="消息消费的确认，防重，幂等"><a href="#消息消费的确认，防重，幂等" class="headerlink" title="消息消费的确认，防重，幂等"></a>消息消费的确认，防重，幂等</h3><h2 id="代码题"><a href="#代码题" class="headerlink" title="代码题"></a>代码题</h2><h2 id="指令命令"><a href="#指令命令" class="headerlink" title="指令命令"></a>指令命令</h2><h3 id="怎么查看日志文件中某个时间段内的日志"><a href="#怎么查看日志文件中某个时间段内的日志" class="headerlink" title="怎么查看日志文件中某个时间段内的日志"></a>怎么查看日志文件中某个时间段内的日志</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs gradle">sed -n ‘<span class="hljs-regexp">/起始时间/</span>,<span class="hljs-regexp">/结束时间/</span>p’ 日志文件<br><span class="hljs-keyword">grep</span> ‘时间’ 日志文件<br></code></pre></td></tr></table></figure><h3 id="Linux部署项目常用命令"><a href="#Linux部署项目常用命令" class="headerlink" title="Linux部署项目常用命令"></a>Linux部署项目常用命令</h3><p>1.一般链接阿里云服务器常用的的是xshell跟xftp.</p><p>2.一开始常用的命令是cd和ls:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">cd</span>是用于切换文件路径的,其中…/可以切换到上当前路径的上一个路径<br></code></pre></td></tr></table></figure><p>3.开启tomcat服务器命令(首先需要切换到tomcat的bin目录下):</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stata">一般使用的是  ./startup.<span class="hljs-keyword">sh</span>  或者 bash startup.<span class="hljs-keyword">sh</span><br></code></pre></td></tr></table></figure><p>4.关闭tomcat服务器命令(路径同上):</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs arduino">一般使用的是  ./<span class="hljs-built_in">shutdown</span>.sh  或者 bash <span class="hljs-built_in">shutdown</span>.sh<br></code></pre></td></tr></table></figure><p>5.查看tomcat日志(需要切换到tomcat的logs目录下)</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">执行命令  tailf catalina.<span class="hljs-keyword">out</span>   或者  tail -f catalina.<span class="hljs-keyword">out</span>  <br></code></pre></td></tr></table></figure><p>6.查看tomcat是否开启(切换到tomcat的bin目录下)</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">执行 <span class="hljs-keyword">ps</span> ef |  <span class="hljs-keyword">grep</span> java<br></code></pre></td></tr></table></figure><p>7.杀死tomcat进程</p><figure class="highlight dns"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs dns">执行 kiil -<span class="hljs-number">9</span> <span class="hljs-number">5263(5263</span>就是上面的红框框住的)<br></code></pre></td></tr></table></figure><p>8.查看端口占用情况</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs 1c"> 执行命令  netstat -tunlp <span class="hljs-string">|grep 端口号</span><br><br>例如 : netstat -tunlp <span class="hljs-string">|grep 80 因为我们开启了tomcat服务占用了80端口,所以此时执行该命令可以明显看到我们的端口被占用了</span><br></code></pre></td></tr></table></figure><h3 id="mysql基本命令"><a href="#mysql基本命令" class="headerlink" title="mysql基本命令"></a>mysql基本命令</h3><ol><li><p>连接数据库执行命令: mysql -u 用户名 -p</p></li><li><p>重启mysql服务执行命令: service mysql restart</p></li><li><p>开启mysql服务执行命令: service mysql start</p></li><li><p>停止mysql服务执行命令: service mysql stop</p></li><li><p>查看mysql状态执行命令: &gt;&gt;mysql<br>————————————————</p></li></ol><h3 id="Maven"><a href="#Maven" class="headerlink" title="Maven"></a>Maven</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">1</span>.svn <br>svn checkout svn:<span class="hljs-regexp">//</span><span class="hljs-number">192.168</span>.<span class="hljs-number">1.1</span><span class="hljs-regexp">/pro/</span>domain 检出项目<br>svn update 更新<br><span class="hljs-number">2</span>.  maven <br>clean 清除上一次Maven执行的结果<br>package 打包<br></code></pre></td></tr></table></figure><h3 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs routeros">free -h  查看内存占用情况<br>df -h 查看磁盘占用情况<br>lsb_release -a 查看系统版本号<br>mysql 重启 <span class="hljs-built_in"> service </span>mysqld restart      /etc/my.cnf mysql linux的配置位置<br>df -h  查看内存占用多少<br>du -h <span class="hljs-attribute">--max-depth</span>=1 查看当前文件夹下所有文件大小<br></code></pre></td></tr></table></figure><h2 id="笔试题回顾"><a href="#笔试题回顾" class="headerlink" title="笔试题回顾"></a>笔试题回顾</h2><h4 id="最长公共前缀"><a href="#最长公共前缀" class="headerlink" title="最长公共前缀"></a>最长公共前缀</h4><p>思路：先指定一个为最长公共前缀，然后遍历与之比较，调用startWith方法，对于每一个字符串，只要不是以目标最长共前缀前缀，这个目标前缀就要去掉最后一位。遍历一圈下来，目标前缀正好满足其他所有字符串的要求。</p><h3 id="查找子序列和最大的区间"><a href="#查找子序列和最大的区间" class="headerlink" title="查找子序列和最大的区间"></a>查找子序列和最大的区间</h3><p>思路：动态规划。遍历数组，如果和小于0，区间初始索引设为当前索引，和置零；否则和加上该值；如果和大于max那么就把区间截止索引设为当前索引。</p><h3 id="快排"><a href="#快排" class="headerlink" title="快排"></a>快排</h3><p>思路：快速排序与归并排序类似，只不过他是在不断的寻找数组中的基准位置（基准位置左边的元素比基准小右边的比基准大），在以基准为中点对左和右两个数组去找基准直到当前层的数组达到最小，那么此时数组每个位置都满足基准位置那么数组已经排序成功。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">public</span> <span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">suanfa4</span> </span>&#123;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">main</span><span class="hljs-params">(String[] args)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span>[] ints = &#123;<span class="hljs-number">1</span>,<span class="hljs-number">1</span>,<span class="hljs-number">5</span>,<span class="hljs-number">3</span>,<span class="hljs-number">2</span>,<span class="hljs-number">5</span>,<span class="hljs-number">4</span>,<span class="hljs-number">8</span>&#125;;<br>        quicklySort(ints,<span class="hljs-number">0</span>,ints.length-<span class="hljs-number">1</span>);<br>        <span class="hljs-keyword">for</span> (<span class="hljs-keyword">int</span> anInt : ints) &#123;<br>            System.out.println(anInt);<br>        &#125;<br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">void</span> <span class="hljs-title">quicklySort</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] temp,<span class="hljs-keyword">int</span> low,<span class="hljs-keyword">int</span> hight)</span></span>&#123;<br>        <span class="hljs-keyword">if</span> (low&lt;hight)&#123;<br>            <span class="hljs-keyword">int</span> index = marge(temp,low,hight);<br><br>            quicklySort(temp,low,index-<span class="hljs-number">1</span>);<br>            quicklySort(temp,index+<span class="hljs-number">1</span>,hight);<br>        &#125;<br><br>    &#125;<br><br>    <span class="hljs-function"><span class="hljs-keyword">private</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">int</span> <span class="hljs-title">marge</span><span class="hljs-params">(<span class="hljs-keyword">int</span>[] temp, <span class="hljs-keyword">int</span> low, <span class="hljs-keyword">int</span> higth)</span> </span>&#123;<br>        <span class="hljs-keyword">int</span> key = temp[low];<br><br>        <span class="hljs-keyword">while</span>(low&lt;higth)&#123;<br>            <span class="hljs-keyword">while</span> (temp[higth]&gt;=key&amp;&amp;low&lt;higth)<br>                higth--;<br>            temp[low] = temp[higth];<br>            <span class="hljs-keyword">while</span> (temp[low]&lt;=key&amp;&amp;low&lt;higth)<br>                low++;<br>            temp[higth] = temp[low];<br>        &#125;<br><br>        temp[low]=key;<br><br>        <span class="hljs-keyword">return</span> low;<br><br>    &#125;<br><br>&#125;<br><br></code></pre></td></tr></table></figure><h3 id="不使用第三变量交换两个变量的值"><a href="#不使用第三变量交换两个变量的值" class="headerlink" title="不使用第三变量交换两个变量的值"></a>不使用第三变量交换两个变量的值</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs java">a = b - a;<br>b = b - a;<br>a = a + b;<br></code></pre></td></tr></table></figure><h2 id="项目"><a href="#项目" class="headerlink" title="项目"></a>项目</h2><h3 id="商城"><a href="#商城" class="headerlink" title="商城"></a>商城</h3><h3 id="结算"><a href="#结算" class="headerlink" title="结算"></a>结算</h3><h4 id="规则审核开发——时间匹配，机型匹配，保修规则匹配"><a href="#规则审核开发——时间匹配，机型匹配，保修规则匹配" class="headerlink" title="规则审核开发——时间匹配，机型匹配，保修规则匹配"></a>规则审核开发——时间匹配，机型匹配，保修规则匹配</h4><ol><li><p>责任链模式</p></li><li><p>orderContext(结算启用规则列表、协议启用规则列表、寄修单实体、寄修规则审核明细列表，订单状态)、xxFilter、xxRule</p></li><li><p>规则接口，每一个规则实现接口，然后根据规则列表匹配，如果状态异常则停止审核。</p><p>理论上的责任链vs工程上的责任链。</p><p>——跨链</p></li></ol><h4 id="CURD接口开发"><a href="#CURD接口开发" class="headerlink" title="CURD接口开发"></a>CURD接口开发</h4><h4 id="规范的开发流程和代码规范"><a href="#规范的开发流程和代码规范" class="headerlink" title="规范的开发流程和代码规范"></a>规范的开发流程和代码规范</h4><p>需求交接，评审，开发，代码提交，跑流水线，本地自测，dev环境发包自测联调，测试的sit环境，用户验收环境uat的测试，参与项目上线。</p><h4 id="华为封装的Jalor框架"><a href="#华为封装的Jalor框架" class="headerlink" title="华为封装的Jalor框架"></a>华为封装的Jalor框架</h4><h4 id="权限管理"><a href="#权限管理" class="headerlink" title="权限管理"></a>权限管理</h4><p>​                在代码Service中加JalorResource注解，方法上加JalorOperation注解，标注方法的权限点                </p><p>​                在中台配置权限，不同的角色配置哪些权限点。而一个用户账号又可以配置多个角色。</p><h3 id="权益"><a href="#权益" class="headerlink" title="权益"></a>权益</h3><h4 id="权益与主业务流的流程与关系"><a href="#权益与主业务流的流程与关系" class="headerlink" title="权益与主业务流的流程与关系"></a>权益与主业务流的流程与关系</h4><ol><li>整个流程分为三个部分：生产制造、渠道零售、服务</li><li>渠道包括自营门店、官网、渠道商门店和网站，权益和设备销售后就进入服务阶段，渠道收到物流的货物之前属于生产制造阶段。</li><li>生产制造 包括生产、库存。物流，权益主要从这里集成基础数据</li><li>渠道销售主要是订单管理、合同管理和进销存管理</li><li>进入服务阶段后就是消费者的正常使用，故障维修阶段，故障维修后会有维修工单，涉及到权益的抵扣。维修的服务供应商因为不是华为自有，所以维修费用会有一个结算功能。</li></ol><h4 id="权益生命周期"><a href="#权益生命周期" class="headerlink" title="权益生命周期"></a>权益生命周期</h4><ol><li>权益生命周期分为四个部分：数据准备、权益发布、权益生效、权益使用</li><li>数据准备就是来自生产制造和其他系统的一些基础数据，sn号物理号，订单号，激活日期，华为账号等</li><li>权益分为基础权益、增值权益（碎屏保）、客户权益、根据国家，机型，成本等综合计算设计权益包，经过权益包申请，审批和发布。</li><li>权益生效根据电子保卡，激活时间，生产+x天，领取日期和截止日期执行权益生效</li><li>权益使用：消费者，服务中心，规则。消费者查询和使用权益（抵扣，过期，取消）；服务中心调用可授予和鉴权。</li></ol><h4 id="系统现状"><a href="#系统现状" class="headerlink" title="系统现状"></a>系统现状</h4><ol><li>存量：17亿设备、54亿权益、54亿履历、69亿物料</li><li>单日：1000万设备权益处理、4000万次权益查询（非高峰）</li><li>30万行代码</li><li>性能&lt;300ms</li></ol><h4 id="设备权益和客户权益3-x部署"><a href="#设备权益和客户权益3-x部署" class="headerlink" title="设备权益和客户权益3+x部署"></a>设备权益和客户权益3+x部署</h4><ol><li><p>背景：欧洲政府对个人数据的隐私保护很严格，德国客户调用权益的时候涉及到用户隐私的问题，所以考虑将一部分业务部署到德国，跨境的数据要进行加解密处理。</p></li><li><p>设备权益3+x转换接口开发</p><p>设备履历接口查询</p><p>​        增值权益鉴权查询</p><p>​        整个流程：德国站点调用部署在海外的加解密服务，加解密服务会将涉密的字段（sn等）进行sha256加密，然后通过HCOP中转传回国内的加解密服务进行解密，然后走JalorRestClient调国内的权益查询原生接口；响应涉及隐私数据如订单号会匿名化最后两个字符，sn等还是sha256加密。</p><p>欧洲存部分sn的密文和原字符串，国内存全量的密文和原字符串（数据库有一个映射表）</p><p>这里可能会问回传链路上的安全问题。中间人攻击之类的。</p></li><li><p>客户权益3+x部署</p><ol><li>内外集成点改造        </li></ol></li></ol><p>​                    FDI数据集成拉取：匹配上下游数据的表对表字段。每天定时拉取数据。</p><p>​                    政企客户集成任务单开发：</p><p>​                    CCPD推送订单到客户权益，首先先存入接口临时表，发消息MQS到客户权益模块，然后经过校验存入正式表，进行权益抵扣，然后持久化操作。这里的操作使用的是一个标准流的模板设计模式。</p><p>消息MQS防重：唯一的orderNo</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>畅想夏日</title>
    <link href="/2021/05/21/%E7%95%85%E6%83%B3%E5%A4%8F%E6%97%A5/"/>
    <url>/2021/05/21/%E7%95%85%E6%83%B3%E5%A4%8F%E6%97%A5/</url>
    
    <content type="html"><![CDATA[<p>盛夏，太阳把灼热的强光照射在大地上，蝉声就像白噪声一样持续不断，心情烦躁时听了愈加烦躁，但是午休时又能伴着规律的蝉声入眠，能睡得更香更沉。猫狗和人都害怕暴晒，所以都躲到阴凉中，困倦。只有绿色的植物显得更加精神和具有生气，明澈的河水也比往常更显得透亮与清凉。夏天的果蔬是最受人喜爱的，我们会在院子里自己种上一些果蔬，按照时令季节种植与采摘。我们用剪刀剪下一颗在阳光下把红到熟透的番茄，赞叹一下它的丰腴，也感恩这一季的风调雨顺，然后将其洗净，用细长的水果刀将其等分成八块，争取每一块中间都保留着完整的瓤，好让它晶莹的橙色看着就让人觉得酸溜溜的，不至于流的满切板都是。这时，拿一只洁白的果盘，把切好的番茄块整齐摆好，最后撒上一勺白糖，这就是独属于夏天的一份酸酸甜甜啦。</p><p>到了夏天，就不能少了我最爱吃的西瓜。西瓜，脆瓤的还是沙瓤的，我都喜欢，到底还是更喜欢脆瓤的，但是不管是哪种瓤，总归要冰镇一下的。冰镇西瓜也不麻烦，这是用不着冰箱的，我们有自己的好办法，只要从庭院里的水井中打上一桶冬暖夏凉的井水，然后将西瓜放入其中，一点不耽搁干别的事，过个把小时来取即可。要吃到好的西瓜，首先得学会选西瓜。选西瓜简直就是在赌石，都要仔细看纹路，检查一下蒂是否发枯，最经典的莫过于用手拍两下看看熟不熟，至于什么声音属于熟了，我到现在也没搞清楚。最紧张也最期待的莫过于开瓜的时刻，如果是一刀下去，瓜自己就开了，那么这就是最好的瓜，它就像一个成绩很好但是骄傲的学生，一点都不含蓄，淋漓尽致的展示了自己的优秀。当一颗西瓜一分为二，敞开肚皮对着我的时候，也是我幸福的烦恼开始的时刻，以前我会纠结于是用勺子挖着吃还是分块吃。现在我不会再有这样的烦恼了，因为一个人的话就可以在空调房里，一边看着综艺，不紧不慢的挖着吃，吃满足了就放在一旁，等会再吃，两个人或者多个人的话，那就切着吃，因为说笑间吃得会更有滋味，也更热闹些。</p><p>炽热的大太阳也不都是一无是处，阳光会让时光加速，阴雨要一天才能风干的衣服在盛夏晴天下仅仅需要三两个小时，当微风浮动衣物时，它们已经是吸满了阳光的味道。阳光还会与黄豆一起，在时间的催化下，酝酿出奶奶的黄豆酱，我从小见到的就是每年夏天放置在庭院中的酱缸。酱缸是中等体积的瓦缸，里面最初放入的是洗净的黄豆，中间还有一些工序我不知道，最后再以绿纱网封口，原谅我吧，夏天小男孩只会对游泳感兴趣，哪里会主动去了解这些事情呢。酱缸最害怕的就是阵雨，一场阵雨就能让前面的努力都化为乌有。所以，只要天色有变，就要紧急转移，保我方酱缸无虞。阳光会携带热量将水升温，这就是太阳能工作的基本原理。我们不用买太阳能，只要学习老辈人的智慧，将一个装满水的塑料桶上铺上一层塑料膜，盛夏的太阳发挥了一天的威力，傍晚时分水已经十分温热了，这时候我们用它冲一个澡。我通常喜欢最后留小半桶水，将桶举过头顶，突然倒扣，将水从头淋到脚，那是非常刺激的。</p><p>夏天的花是开的很盛的，我们要在院子里种上繁茂的花，花的颜色我要选粉红色的，纯白色的，不要一些艳俗的色彩，例如紫红色等。到时候花开的纷纷洋洋，一团一簇的，微风混合着各色花香，在夏天的气息里荡漾。我们不能偷懒，要时常修剪，以便能够节省养分，也为了美观。当用剪刀剪动花枝，一些花就忍不住随风散开了，下一场花雨，这是我们的粗鲁，却是她的浪漫。我不打算让散落的花瓣零落成泥碾作尘，我们还要靠她来堆肥呢。院子里的墙要刷成白色，再嵌入一个天蓝色的木窗。运气好的话，在晴空万里的天气，会有飞机在蔚蓝色的天空画上一道白色的尾迹。到时候我要搬出藤椅，加一杯茶，要是心情不错，就捧一本书，饶有兴致的看起来，累了就看看天，看看飞机，看看花，看看院墙和木窗，闻一闻茶香，闻一闻花香，也闻一闻书香。风一吹，可能就躺着睡着了，这就度过了一个闲适的下午。</p><p>屋檐伸出来的部分，铺上一层黄色的衰草，供雨水往下流淌，卧室的窗边的外面就种植芭蕉，雨天的晚上就能听那雨打芭蕉的声音了，这时候可以想自己的事，也可以畅想一下宋代的词人在听雨打芭蕉声的时候在思考些什么。</p><p>待续…</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>鼓楼|歌词</title>
    <link href="/2021/03/22/%E9%BC%93%E6%A5%BC-%E6%AD%8C%E8%AF%8D/"/>
    <url>/2021/03/22/%E9%BC%93%E6%A5%BC-%E6%AD%8C%E8%AF%8D/</url>
    
    <content type="html"><![CDATA[<p>我走在鼓楼下面</p><p>路在堵着</p><p>雨后的阳光散落</p><p>人们都出来了</p><p>执着的迷惘的</p><p>文艺青年很多</p><p>如果我无聊了就会来这里坐坐</p><p>我是个沉默不语的靠着墙壁晒太阳的过客</p><p>如果我有些倦意了</p><p>就让我在这里独自醒过</p><p>我站在鼓楼上面</p><p>一切繁华与我无关</p><p>这是个拥挤的地方</p><p>而我却很平凡</p><p>我走在鼓楼下面</p><p>淋湿的咖啡馆</p><p>睡不着的后海边</p><p>月亮还在抽着烟</p><p>喝醉的亲吻着</p><p>快活的人不眠</p><p>唯有我倚着围栏</p><p>对过往说晚安</p><p>晚安</p><p>我是个沉默不语的靠着车窗想念你的乘客</p><p>当一零七路再次经过</p><p>时间是带走青春的电车</p><p>我站在什刹海边</p><p>一切甜蜜与我无关</p><p>这是个拥挤的地方</p><p>而我却很孤单</p><p>我在鼓楼 我在鼓楼</p><p>我在鼓楼 我在鼓楼</p><p>我在鼓楼 我在鼓楼</p>]]></content>
    
    
    
    <tags>
      
      <tag>歌词</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/03/18/hello-world/"/>
    <url>/2021/03/18/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
